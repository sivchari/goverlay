package internal

type Replace struct {
	// Currently, goverlay only supports or struct and function on global scope
	Kind  string `yaml:"kind"`
	Ident string `yaml:"ident"`
}

// Config is the configuration for goverlay
// It specifies the original file, the new file, the overlayed file and the replacements
// The replacements are the functions or structs that are to be replaced
// The replacements are specified by the kind and the identifier
// The kind can be struct or function
// The identifier is the name of the struct or function
// Here is an example of a goverlay configuration:
//
// goverlay.yaml
//
//	from: /path/to/original/original.go
//	patch: ./new.go
//	dist: ./goverlayed.go
//	replaces:
//	  - kind: func
//	    ident: hello
//
// -- ./new.go --
// package original
//
// // hello is the new hello function
//
//	func hello() {
//		// snip
//	}
//
// -- ./goverlayed.go --
// package original
//
// // Some code
//
//	func _hello() {
//		// snip
//	}
//
// // Some code
//
// // The following code is generated by goverlay
//
// // hello is the new hello function
//
//	func hello() {
//		// snip
//	}
//
// // End of goverlay generated code
type Config struct {
	From     string
	Patch    string
	Dist     string
	Replaces []Replace
}
